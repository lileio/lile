package subscribers

import (
	"context"
	"time"

    "github.com/gogo/protobuf/proto"
    "github.com/lileio/pubsub"
)

// See https://godoc.org/github.com/lileio/pubsub#Handler for an example
// of what an subscriber handler should look like

type {{ .CamelCaseName }}ServiceSubscriber struct {}

func (s *{{ .CamelCaseName }}ServiceSubscriber) Setup(c *pubsub.Client) {
        // https://godoc.org/github.com/lileio/pubsub#Client.On
        // c.On(pubsub.HandlerOptions{
        // 	Topic:    "some_topic",
        // 	Name:     "service_name",
        // 	Handler:  s.SomeMethod,
        // 	Deadline: 10 * time.Second,
        // 	AutoAck:  true,
        // })
}

func (s *{{ .CamelCaseName }}ServiceSubscriber) SomeMethod(ctx context.Context, req *proto.Message, msg *pubsub.Msg) error {
    // TODO: req type must be set to a valid service proto message
    return nil
}