package main

import (
	"github.com/lileio/lile"
	"github.com/lileio/lile/fromenv"
	"github.com/lileio/lile/rpc"
	"github.com/lileio/lile/rpc/metrics/prometheus"
	"{{ .RelDir }}/{{ .SnakeCaseName }}"
	"{{ .RelDir }}/{{ .SnakeCaseName }}/server"
	"{{ .RelDir }}/{{ .SnakeCaseName }}/slack/cmd"
	"{{ .RelDir }}/{{ .SnakeCaseName }}/subscribers"
	"google.golang.org/grpc"
)

func main() {
	s := &server.{{ .CamelCaseName }}Server{}

	impl := func(g *grpc.Server) {
	      {{ .SnakeCaseName }}.Register{{ .CamelCaseName }}Server(g, s)
	}

	n := "{{ .Name }}"

	server := lile.NewService(
		n,
		rpc.Implementation(impl),
		rpc.RPCMonitor(prometheus.NewMonitor()),
		&subscribers.{{ .CamelCaseName }}ServiceSubscriber{},
		fromenv.PubSubProvider(n),
		fromenv.Tracer(n),
	)
	
	cmd.Execute(server)
}
